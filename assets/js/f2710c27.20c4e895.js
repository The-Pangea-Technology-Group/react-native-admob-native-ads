"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[403],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return s}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),m=c(t),s=i,f=m["".concat(l,".").concat(s)]||m[s]||p[s]||o;return t?a.createElement(f,r(r({ref:n},u),{},{components:t})):a.createElement(f,r({ref:n},u))}));function s(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=m;var d={};for(var l in n)hasOwnProperty.call(n,l)&&(d[l]=n[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,r[1]=d;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7387:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var a=t(3117),i=t(102),o=(t(7294),t(3905)),r=["components"],d={id:"migrating",title:"Migrating Guide",sidebar_label:"Migrating Guide"},l=void 0,c={unversionedId:"migrating",id:"migrating",title:"Migrating Guide",description:"From 0.4.1",source:"@site/docs/migrating.md",sourceDirName:".",slug:"/migrating",permalink:"/react-native-admob-native-ads/docs/migrating",editUrl:"https://github.com/ammarahm-ed/react-native-admob-native-ads/edit/master/docs/docs/migrating.md",tags:[],version:"current",frontMatter:{id:"migrating",title:"Migrating Guide",sidebar_label:"Migrating Guide"},sidebar:"someSidebar",previous:{title:"Installation",permalink:"/react-native-admob-native-ads/docs/installation-3"},next:{title:"How to use",permalink:"/react-native-admob-native-ads/docs/nativeadview/"}},u=[{value:"From 0.4.1",id:"from-041",children:[{value:"Update Google-Mobile-Ads",id:"update-google-mobile-ads",children:[],level:3},{value:"Rename <code>onUnifiedNativeAdLoaded</code> to <code>onNativeAdLoaded</code>",id:"rename-onunifiednativeadloaded-to-onnativeadloaded",children:[],level:3}],level:2},{value:"From 0.3.9",id:"from-039",children:[{value:"Manually load ads",id:"manually-load-ads",children:[],level:3},{value:"Rename <code>MediaView</code> to <code>NativeMediaView</code>",id:"rename-mediaview-to-nativemediaview",children:[],level:3},{value:"Use <code>buttonAndroidStyle</code> for <code>CallToActionView</code>",id:"use-buttonandroidstyle-for-calltoactionview",children:[],level:3}],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"from-041"},"From 0.4.1"),(0,o.kt)("h3",{id:"update-google-mobile-ads"},"Update Google-Mobile-Ads"),(0,o.kt)("p",null,"Update your Google Mobile Ads Library in Podfile."),(0,o.kt)("p",null,"Add these to your Podfile."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pod 'Google-Mobile-Ads-SDK'\npod 'GoogleMobileAdsMediationFacebook'\n")),(0,o.kt)("p",null,"Then run ",(0,o.kt)("inlineCode",{parentName:"p"},"pod update")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"pod install"),". If you are upgrading, then run, ",(0,o.kt)("inlineCode",{parentName:"p"},"pod install --repo-update")),(0,o.kt)("h3",{id:"rename-onunifiednativeadloaded-to-onnativeadloaded"},"Rename ",(0,o.kt)("inlineCode",{parentName:"h3"},"onUnifiedNativeAdLoaded")," to ",(0,o.kt)("inlineCode",{parentName:"h3"},"onNativeAdLoaded")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"onUnifiedNativeAdLoaded"),", prop of ",(0,o.kt)("inlineCode",{parentName:"p"},"NativeAdView")," has been renamed to ",(0,o.kt)("inlineCode",{parentName:"p"},"onNativeAdLoaded"),"."),(0,o.kt)("h2",{id:"from-039"},"From 0.3.9"),(0,o.kt)("p",null,"If you are migrating from ",(0,o.kt)("inlineCode",{parentName:"p"},"v0.3.9")," of this library, here a the changes that you will need to make to your code. You also need apply all the ",(0,o.kt)("a",{parentName:"p",href:"#from-041"},"changes")," above."),(0,o.kt)("h3",{id:"manually-load-ads"},"Manually load ads"),(0,o.kt)("p",null,"Ads are to be loaded using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ref")," on ",(0,o.kt)("inlineCode",{parentName:"p"},"NativeAdView")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'const AdView = () => {\n  // Each NativeAdView component needs to have its own ref, you cannot use the same ref for multiple ads.\n  const nativeAdViewRef = useRef();\n\n  React.useEffect(() => {\n    nativeAdViewRef.current?.loadAd();\n  }, []);\n\n  return (\n    <NativeAdView\n      ref={nativeAdViewRef}\n      adUnitID="ca-app-pub-3940256099942544/2247696110"\n    >\n      <View>/* All other ad components */</View>\n    </NativeAdView>\n  );\n};\n')),(0,o.kt)("h3",{id:"rename-mediaview-to-nativemediaview"},"Rename ",(0,o.kt)("inlineCode",{parentName:"h3"},"MediaView")," to ",(0,o.kt)("inlineCode",{parentName:"h3"},"NativeMediaView")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MediaView")," has been renamed to ",(0,o.kt)("inlineCode",{parentName:"p"},"NativeMediaView")," to avoid conflicts with other libraries"),(0,o.kt)("h3",{id:"use-buttonandroidstyle-for-calltoactionview"},"Use ",(0,o.kt)("inlineCode",{parentName:"h3"},"buttonAndroidStyle")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"CallToActionView")),(0,o.kt)("p",null,"To style the ",(0,o.kt)("inlineCode",{parentName:"p"},"CallToAction")," button on Android, you should use ",(0,o.kt)("inlineCode",{parentName:"p"},"buttonAndroidStyle")," Prop."))}m.isMDXComponent=!0}}]);